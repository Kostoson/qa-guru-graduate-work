plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def
        allureVersion = "2.23.0",
        junitVersion = "5.9.3",
        slf4jVersion = "2.0.7",
        assertjVersion = "3.24.2",
        selenideVersion = "6.15.0",
        fakerVersion = "1.0.2",
        ownerVersion = "1.0.12"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags( "remote")
    }
}

test {
        useJUnitPlatform()
    }